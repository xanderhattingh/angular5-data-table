{
  "version": 3,
  "file": "angular5-data-table.umd.js",
  "sources": [
    "ng://angular5-data-table/out/datatable.module.ts",
    "ng://angular5-data-table/out/components/pagination/pagination.component.ts",
    "ng://angular5-data-table/out/components/header/header.component.ts",
    "ng://angular5-data-table/out/components/table/table.component.ts",
    "ng://angular5-data-table/out/utils/drag.ts",
    "ng://angular5-data-table/out/types/default-translations.type.ts",
    "ng://angular5-data-table/out/components/row/row.component.ts",
    "ng://angular5-data-table/out/directives/column/column.directive.ts",
    "ng://angular5-data-table/out/tools/data-table-resource.ts",
    "ng://angular5-data-table/out/utils/px.ts",
    "ng://angular5-data-table/out/utils/min.ts",
    "ng://angular5-data-table/out/utils/hide.ts"
  ],
  "sourcesContent": [
    "// modules\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n// utils\nimport { HideDirective } from './utils/hide';\nimport { MinPipe } from './utils/min';\nimport { PixelConverter } from './utils/px';\n// types & tools\nimport { DataTableTranslations } from './types/data-table-translations.type';\nimport { CellCallback } from './types/cell-callback.type';\nimport { RowCallback } from './types/row-callback.type';\nimport { DataTableResource } from './tools/data-table-resource';\nimport { DataTableParams } from './types/data-table-params.type';\n// components & directives\nimport { DataTableComponent } from './components/table/table.component';\nimport { DataTableRowComponent } from './components/row/row.component';\nimport { DataTableColumnDirective } from './directives/column/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTablePaginationComponent } from './components/pagination/pagination.component';\n\nexport {\n  DataTableComponent, DataTableColumnDirective, DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n  DataTableResource,\n  DataTableParams, DataTableTranslations,\n  CellCallback, RowCallback\n};\n\n@NgModule({\n  declarations: [\n    DataTableComponent, DataTableColumnDirective,\n    DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n    PixelConverter, HideDirective, MinPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [DataTableComponent, DataTableColumnDirective]\n})\n\nexport class DataTableModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DataTableModule,\n      providers: []\n    };\n  }\n}\n\n\n",
    "import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport { DataTableComponent} from '../table/table.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table-pagination',\n  template: `<div class=\"d-flex justify-content-between align-items-center\">\n  <div class=\"pagination-range\">\n    <span [textContent]=\"dataTable.labels.paginationText\n        .replace('{from}', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + '' : '0')\n        .replace('{to}', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + '')\n        .replace('{total}', dataTable.itemCount + '')\"></span>\n  </div>\n  <div class=\"pagination-controllers pagination-box d-flex justify-content-between\">\n    <div class=\"pagination-limit d-flex justify-content-between\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <label [attr.for]=\"id + '-page-limit'\" class=\"input-group-text\" [textContent]=\"dataTable.labels.paginationLimit\"></label>\n        </div>\n        <select [id]=\"id + '-page-limit'\" class=\"form-control\" [(ngModel)]=\"limit\" [disabled]=\"dataTable.itemCount === 0\">\n          <option *ngFor=\"let l of limits\" [value]=\"l\">{{ l }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"pagination-pages d-flex justify-content-between\">\n      <button [disabled]=\"dataTable.offset <= 0\"\n              (click)=\"pageFirst()\"\n              class=\"btn btn-default pagination-firstpage\"\n              [title]=\"dataTable.labels.firstPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\n      </button>\n      <button [disabled]=\"dataTable.offset <= 0\"\n              (click)=\"pageBack()\"\n              class=\"btn btn-default pagination-prevpage\"\n              [title]=\"dataTable.labels.prevPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"pagination-page\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <label class=\"input-group-text\" [attr.for]=\"id + '-page-input'\">\n              {{ dataTable.labels.pageNumberLabel }}\n            </label>\n          </div>\n          <input #pageInput type=\"number\"\n                 [id]=\"id + '-page-input'\"\n                 class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n                 [disabled]=\"dataTable.itemCount === 0\"\n                 [ngModel]=\"page\"\n                 (blur)=\"validate($event)\"\n                 (keyup.enter)=\"validate($event)\"\n                 (keyup.esc)=\"pageInput.value = page\"\n                 [title]=\"dataTable.labels.pageNumber + ' ' +\n                    dataTable.labels.pageNumberNofM.replace('{N}', ''+page).replace('{M}', ''+maxPage)\"\n                 [attr.aria-controls]=\"dataTable.id\"/>\n          <div class=\"input-group-append\">\n            <span class=\"input-group-text\">\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            </span>\n          </div>\n        </div>\n      </div>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n              (click)=\"pageForward()\"\n              class=\"btn btn-default pagination-nextpage\"\n              [title]=\"dataTable.labels.nextPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n      </button>\n      <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n              (click)=\"pageLast()\"\n              class=\"btn btn-default pagination-lastpage\"\n              [title]=\"dataTable.labels.lastPage\"\n              [attr.aria-controls]=\"dataTable.id\">\n        <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.pagination-controllers select{min-width:5rem;text-align:right}.pagination-pages>*{margin:0 .15rem}.pagination-limit{margin-right:1.5rem}.pagination-box button{outline:0!important}`]\n})\nexport class DataTablePaginationComponent {\n\n  id = `pagination-${nextId++}`;\n\n  @ViewChild('pageInput') pageInput: ElementRef;\n\n  Math: any;\n\n  @Input() limits: number[];\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent) {\n    this.Math = Math;\n  }\n\n  pageBack() {\n    this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n    if (this.dataTable.offset <= 0) {\n      this.pageInput.nativeElement.focus();\n    }\n}\n  pageForward() {\n    this.dataTable.offset += this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  pageFirst() {\n    this.dataTable.offset = 0;\n    this.pageInput.nativeElement.focus();\n  }\n\n  pageLast() {\n    this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  get maxPage() {\n    return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n  }\n\n  get limit() {\n    return this.dataTable.limit;\n  }\n\n  set limit(value) {\n    this.dataTable.limit = +value;\n    // returning back to the first page.\n    this.page = 1;\n  }\n\n  get page() {\n    return this.dataTable.page;\n  }\n\n  set page(value) {\n    this.dataTable.page = +value;\n  }\n\n  validate(event) {\n    const newValue = +event.target.value;\n    if (newValue !== this.page) {\n      this.page = (event.target.value > this.maxPage) ? this.maxPage : (newValue < 1 ) ? 1 : newValue;\n      event.target.value = this.page;\n    }\n  }\n}\n",
    "import {\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: 'data-table-header',\n  template: `<div class=\"data-table-header\">\n  <p class=\"h4 title\" *ngIf=\"dataTable.showTitle\" [textContent]=\"dataTable.title\"></p>\n  <div class=\"button-panel\">\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\n            (click)=\"dataTable.reloadItems()\"\n            [title]=\"dataTable.labels.headerReload.replace('{title}', dataTable.title)\">\n      <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n    </button>\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-expanded]=\"columnSelectorOpen\"\n            (click)=\"columnSelectorOpen = !columnSelectorOpen;\"\n            [title]=\"dataTable.labels.headerColumnSelector.replace('{title}', dataTable.title)\">\n      <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"column-selector-wrapper\">\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\n        <ul class=\"list-group list-group-flush\">\n          <li *ngIf=\"dataTable.expandableRows\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.expandColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.indexColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.indexColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.selectColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.selectColumn\"></span>\n            </label>\n          </li>\n          <ng-template ngFor let-item let-i=\"index\" [ngForOf]=\"dataTable.columns\">\n            <li class=\"list-group-item column-selector-column checkbox\"\n                *ngIf=\"dataTable.primaryColumn !== item.property\">\n              <label class=\"d-flex align-items-center\">\n                <input type=\"checkbox\" [(ngModel)]=\"item.visible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n                <span [textContent]=\"item.header\"></span>\n              </label>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n`,\n  styles: [`.data-table-header{min-height:25px;margin-bottom:10px}.title{display:inline-block;margin:5px 0 0 5px}.button-panel{float:right}.button-panel button{outline:0!important}.column-selector-wrapper{position:relative}.column-selector-box{-webkit-box-shadow:0 0 10px #d3d3d3;box-shadow:0 0 10px #d3d3d3;background:#fff;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-box .list-group-item.column-selector-column{padding:.5rem .25rem}.column-selector-box .list-group-item.column-selector-column label{margin-bottom:0}.column-selector-box .list-group-item.column-selector-column input{margin-right:4px;font-style:italic}`]\n})\nexport class DataTableHeaderComponent {\n\n  columnSelectorOpen = false;\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private elemRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event']) onClickHandler(event) {\n    if (!this.elemRef.nativeElement.contains(event.target)) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  @HostListener('document:keyup', ['$event']) onKeyUpHandler(event) {\n    if (event.keyCode === 27 || (event.keyCode === 9 && !this.elemRef.nativeElement.contains(event.target))) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  onChange(event: Event) {\n    const isChecked = (<HTMLInputElement> event.target).checked;\n    const columnName = (<HTMLInputElement> event.target).parentElement.textContent.trim();\n    const interpolateParams = {\n      'column_name': columnName,\n      'title': this.dataTable.title\n    };\n\n    this.dataTable.columnSelectorNotification = (isChecked ? this.dataTable.labels.headerColumnSelectorAdded :\n      this.dataTable.labels.headerColumnSelectorRemoved)\n      .replace('{column_name}', interpolateParams.column_name)\n      .replace('{title}', interpolateParams.title);\n  }\n}\n",
    "import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChildren\n} from '@angular/core';\nimport { DataTableColumnDirective } from '../../directives/column/column.directive';\nimport { DataTableRowComponent } from '../row/row.component';\nimport { DataTableParams } from '../../types/data-table-params.type';\nimport { RowCallback } from '../../types/row-callback.type';\nimport { DataTableTranslations } from '../../types/data-table-translations.type';\nimport { defaultTranslations } from '../../types/default-translations.type';\nimport { drag } from '../../utils/drag';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/do';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table',\n  template: `<div class=\"data-table-wrapper\">\n  <span class=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"text\">\n    <span [textContent]=\"reloadNotification\"></span>\n    <span [textContent]=\"paginationNotification\"></span>\n    <span [textContent]=\"sortNotification\"></span>\n    <span [textContent]=\"columnSelectorNotification\"></span>\n  </span>\n\n  <data-table-header *ngIf=\"header\"></data-table-header>\n\n  <div class=\"data-table-box\">\n    <table class=\"table data-table\" [id]=\"id\">\n      <caption class=\"sr-only\" [textContent]=\"title\"></caption>\n      <thead>\n      <tr>\n        <td [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\n        </td>\n        <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\n          <span [textContent]=\"indexColumnHeader\"></span>\n        </th>\n        <td [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\n          <input [hide]=\"!multiSelect\"\n                 type=\"checkbox\"\n                 [(ngModel)]=\"selectAllCheckbox\"\n                 [disabled]=\"itemCount === 0\"\n                 [title]=\"labels.selectAllRows\"\n                 [attr.aria-label]=\"labels.selectAllRows\"/>\n        </td>\n        <th *ngFor=\"let column of columns, index as i\" #th\n            [hide]=\"!column.visible\"\n            [class.sortable]=\"column.sortable\"\n            [class.resizable]=\"column.resizable\"\n            scope=\"col\"\n            [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\" >\n          <button *ngIf=\"column.sortable\" (click)=\"headerClicked(column, $event)\"\n                  [attr.aria-controls]=\"column.sortable ? id : null\"\n                  [disabled]=\"itemCount === 0\"\n                  [attr.aria-labelledby]=\"'col-'+id+'-'+i\"\n                  [title]=\"!sortAsc ? labels.sortAscending : labels.sortDescending\">\n            <span *ngIf=\"!column.headerTemplate\" [id]=\"'col-'+id+'-'+i\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n              <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                aria-hidden=\"true\"></i>\n              <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </button>\n          <span *ngIf=\"!column.sortable\">\n            <span *ngIf=\"!column.headerTemplate\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n               <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                  aria-hidden=\"true\"></i>\n               <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                  [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\n      </tbody>\n      <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\n        <tr>\n          <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\n        </tr>\n      </tbody>\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\n          [class.row-even]=\"(index + items.length) % 2 === 1\" role=\"presentation\">\n        <td [hide]=\"!expandColumnVisible\"></td>\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\n        <td [hide]=\"!selectColumnVisible\"></td>\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"busy\" *ngIf=\"showReloading && reloading\">\n      <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\n    </div>\n  </div>\n\n  <data-table-pagination *ngIf=\"pagination\" [limits]=\"pageLimits\"></data-table-pagination>\n</div>\n`,\n  styles: [`:host /deep/ .data-table.table>tbody+tbody{border-top:none}:host /deep/ .data-table.table td{vertical-align:middle}:host /deep/ .data-table>tbody>tr>td,:host /deep/ .data-table>thead>tr>th{overflow:hidden}:host /deep/ .data-table>thead>tr>td{border-bottom:2px solid #dee2e6}:host /deep/ .row-odd{background-color:#f6f6f6}.data-table .substitute-rows>tr:hover,:host /deep/ .data-table .data-table-row:hover{background-color:#ececec}.data-table{-webkit-box-shadow:0 0 15px #ececec;box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header{position:relative}.expand-column-header{width:50px}.select-column-header{width:50px;text-align:center}.index-column-header{width:40px}.column-header.sortable button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:0;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;text-align:left}.column-header .column-sort-icon{margin-left:8px}.column-header.resizable .column-sort-icon{margin-right:8px}.column-header .column-sort-icon .column-sortable-icon{color:#d3d3d3}.column-header .column-resize-handle{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box{position:relative}.busy{position:absolute;z-index:1;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,.25)}.busy>i{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}`]\n})\nexport class DataTableComponent implements DataTableParams, OnInit, AfterContentInit, OnDestroy {\n\n  private _items: any[] = [];\n  private _itemCount;\n\n  @Input()\n  get items(): any[] {\n    return this._items;\n  }\n\n  set items(items: any[]) {\n    this._items = items;\n    // no need to call notifier.next() because _onReloadFinished()\n    // will change reloaded value causing notifier.next() to be called implicitly.\n    this._onReloadFinished();\n  }\n\n\n  @Input()\n  get itemCount(): number {\n    return this._itemCount;\n  }\n\n  set itemCount(count: number) {\n    this._itemCount = count;\n    this.notifier.next();\n  }\n\n  // UI components:\n  @ContentChildren(DataTableColumnDirective) columns: QueryList<DataTableColumnDirective>;\n  @ViewChildren(DataTableRowComponent) rows: QueryList<DataTableRowComponent>;\n  @ContentChild('dataTableExpand') expandTemplate: TemplateRef<any>;\n\n  // One-time optional bindings with default values:\n  @Input() title = '';\n  @Input() showTitle = true;\n  @Input() header = true;\n  @Input() pagination = true;\n  @Input() indexColumn = true;\n  @Input() indexColumnHeader = '';\n  @Input() rowColors: RowCallback;\n  @Input() rowTooltip: RowCallback;\n  @Input() selectColumn = false;\n  @Input() multiSelect = true;\n  @Input() substituteRows = true;\n  @Input() expandableRows = false;\n  @Input() labels: DataTableTranslations;\n  @Input() selectOnRowClick = false;\n  @Input() autoReload = true;\n  @Input() showReloading = false;\n  @Input() noDataMessage: string;\n  @Input() pageLimits: number[] = [10, 25, 50, 100, 250];\n  @Input() primaryColumn = '';\n\n  // reload emitter\n  @Output() reload = new EventEmitter();\n\n  // event handlers:\n  @Output() rowClick = new EventEmitter();\n  @Output() rowDoubleClick = new EventEmitter();\n  @Output() headerClick = new EventEmitter();\n  @Output() cellClick = new EventEmitter();\n  // UI state without input:\n  indexColumnVisible: boolean;\n  selectColumnVisible: boolean;\n  expandColumnVisible: boolean;\n\n  // ada notifications.\n  reloadNotification: string;\n  paginationNotification: string;\n  sortNotification: string;\n  columnSelectorNotification: string;\n\n  _displayParams = <DataTableParams>{}; // params of the last finished reload\n\n  subject = new Subject<void>();\n  subject$: Subscription;\n\n  notifier = new Subject<void>();\n  notifier$: Subscription;\n\n  // selection:\n  selectedRow: DataTableRowComponent;\n  selectedRows: DataTableRowComponent[] = [];\n\n  Math: any;\n  id = `datatable-${nextId++}`;\n\n  // select all checkbox flag\n  private _selectAllCheckbox = false;\n\n  // column resizing:\n  private _resizeInProgress = false;\n\n  resizeLimit = 30;\n\n  // Reloading:\n  _reloading = false;\n\n  get reloading() {\n    return this._reloading;\n  }\n\n  set reloading(val: boolean) {\n    this._reloading = val;\n    this.notifier.next();\n  }\n\n  // UI state: visible get/set for the outside with @Input for one-time initial values\n  private _sortBy: string;\n\n  @Input()\n  get sortBy(): string {\n    return this._sortBy;\n  }\n\n  set sortBy(value: string) {\n    this._sortBy = value;\n    this.subject.next();\n  }\n\n  private _sortAsc = true;\n\n  @Input()\n  get sortAsc(): boolean {\n    return this._sortAsc;\n  }\n\n  set sortAsc(value: boolean) {\n    this._sortAsc = value;\n    this.subject.next();\n  }\n\n  private _offset = 0;\n\n  @Input()\n  get offset(): number {\n    return this._offset;\n  }\n\n  set offset(value: number) {\n    this._offset = value;\n    this.subject.next();\n  }\n\n  private _limit = 10;\n\n  @Input()\n  get limit(): number {\n    return this._limit;\n  }\n\n  set limit(value: number) {\n    this._limit = value;\n    this.subject.next();\n  }\n\n  // calculated property:\n  @Input()\n  get page() {\n    return this.itemCount !== 0 ? Math.floor(this.offset / this.limit) + 1 : 0;\n  }\n\n  set page(value) {\n    this.offset = (value - 1) * this.limit;\n  }\n\n  get lastPage() {\n    return Math.ceil(this.itemCount / this.limit);\n  }\n\n  // setting multiple observable properties simultaneously\n  sort(sortBy: string, asc: boolean) {\n    this.sortBy = sortBy;\n    this.sortAsc = asc;\n  }\n\n  // init\n  ngOnInit() {\n    this._initDefaultValues();\n    this._initDefaultClickEvents();\n    this._updateDisplayParams();\n\n    if (this.pageLimits.indexOf(this.limit) < 0) {\n      this.limit = this.pageLimits[0];\n    }\n\n    this.labels = {...defaultTranslations, ...this.labels};\n\n    if (this.autoReload) {\n      this.reloadItems();\n    }\n\n    this.notifier$ = this.notifier.subscribe(() => this._notify());\n    this.subject$ = this.subject.debounceTime(100).subscribe(() => this.reloadItems());\n\n  }\n\n  private _initDefaultValues() {\n    this.indexColumnVisible = this.indexColumn;\n    this.selectColumnVisible = this.selectColumn;\n    this.expandColumnVisible = this.expandableRows;\n  }\n\n  private _initDefaultClickEvents() {\n    this.headerClick.subscribe(\n      (tableEvent: { column: DataTableColumnDirective, event: Event }) => this.sortColumn(tableEvent.column));\n    if (this.selectOnRowClick) {\n      this.rowClick.subscribe(\n        (tableEvent: { row: DataTableRowComponent, event: Event }) => tableEvent.row.selected = !tableEvent.row.selected);\n    }\n  }\n\n  reloadItems() {\n    this.reloading = true;\n    this.reload.emit(this._getRemoteParameters());\n  }\n\n  private _onReloadFinished() {\n    if (this.reloading) {\n      this._updateDisplayParams();\n      this._selectAllCheckbox = false;\n      this.reloading = false;\n    }\n  }\n  get displayParams() {\n    return this._displayParams;\n  }\n\n  _updateDisplayParams() {\n    this._displayParams = {\n      sortBy: this.sortBy,\n      sortAsc: this.sortAsc,\n      offset: this.offset,\n      limit: this.limit\n    };\n  }\n\n  constructor() { }\n\n  public rowClicked(row: DataTableRowComponent, event: Event) {\n    this.rowClick.emit({row, event});\n  }\n\n  public rowDoubleClicked(row: DataTableRowComponent, event: Event) {\n    this.rowDoubleClick.emit({row, event});\n  }\n\n  public headerClicked(column: DataTableColumnDirective, event: Event) {\n    if (!this._resizeInProgress) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.headerClick.emit({column, event});\n    } else {\n      this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n    }\n  }\n\n  private cellClicked(column: DataTableColumnDirective, row: DataTableRowComponent, event: MouseEvent) {\n    this.cellClick.emit({row, column, event});\n  }\n\n  // functions:\n  private _getRemoteParameters(): DataTableParams {\n    const params = <DataTableParams>{};\n\n    if (this.sortBy) {\n      params.sortBy = this.sortBy;\n      params.sortAsc = this.sortAsc;\n    }\n    if (this.pagination) {\n      params.offset = this.offset;\n      params.limit = this.limit;\n    }\n    return params;\n  }\n\n  private sortColumn(column: DataTableColumnDirective) {\n    if (column.sortable) {\n      const ascending = this.sortBy === column.property ? !this.sortAsc : true;\n      this.sort(column.property, ascending);\n    }\n  }\n\n  get columnCount() {\n    let count = 0;\n    count += this.indexColumnVisible ? 1 : 0;\n    count += this.selectColumnVisible ? 1 : 0;\n    count += this.expandColumnVisible ? 1 : 0;\n    this.columns.toArray().forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n    return count;\n  }\n\n  public getRowColor(item: any, index: number, row: DataTableRowComponent) {\n    if (this.rowColors !== undefined) {\n      return (<RowCallback>this.rowColors)(item, row, index);\n    }\n  }\n\n  get selectAllCheckbox() {\n    return this._selectAllCheckbox;\n  }\n\n  set selectAllCheckbox(value) {\n    this._selectAllCheckbox = value;\n    this._onSelectAllChanged(value);\n  }\n\n  private _onSelectAllChanged(value: boolean) {\n    this.rows.toArray().forEach(row => row.selected = value);\n  }\n\n  onRowSelectChanged(row: DataTableRowComponent) {\n\n    // maintain the selectedRow(s) view\n    if (this.multiSelect) {\n      const index = this.selectedRows.indexOf(row);\n      if (row.selected && index < 0) {\n        this.selectedRows.push(row);\n      } else if (!row.selected && index >= 0) {\n        this.selectedRows.splice(index, 1);\n      }\n    } else {\n      if (row.selected) {\n        this.selectedRow = row;\n      } else if (this.selectedRow === row) {\n        delete this.selectedRow;\n      }\n    }\n\n    // unselect all other rows:\n    if (row.selected && !this.multiSelect) {\n      this.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\n        if (row_ !== row) { // avoid endless loop\n          row_.selected = false;\n        }\n      });\n    }\n  }\n\n  // other:\n\n  get substituteItems() {\n    return Array.from({length: this.displayParams.limit - this.items.length});\n  }\n\n  private resizeColumnStart(event: MouseEvent, column: DataTableColumnDirective, columnElement: HTMLElement) {\n    this._resizeInProgress = true;\n    let startOffset = columnElement.offsetWidth - event.pageX;\n    drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        if (this._isResizeInLimit(columnElement, dx)) {\n          column.width = startOffset + moveEvent.pageX + dx;\n        }\n      },\n    });\n  }\n\n  private _isResizeInLimit(columnElement: HTMLElement, dx: number) {\n    /* This is needed because CSS min-width didn't work on table-layout: fixed.\n         Without the limits, resizing can make the next column disappear completely,\n         and even increase the table width. The current implementation suffers from the fact,\n         that offsetWidth sometimes contains out-of-date values. */\n    if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n      !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\n      (dx >= 0 && ((<HTMLElement> columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit)) {\n      return false;\n    }\n    return true;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.primaryColumn === '') {\n      this.primaryColumn = (this.columns.first as DataTableColumnDirective).property;\n    }\n  }\n\n  _notify(): void {\n    const loading = this.reloading;\n\n    this.reloadNotification = loading ?\n      this.labels.loadingText.replace('{title}', this.title) :\n      this.labels.loadedText.replace('{title}', this.title);\n\n    if (!loading) {\n      if (this.pagination) {\n        this.paginationNotification = this.labels.paginationText\n          .replace('{from}', '' + (Math.ceil(this.itemCount / this.limit) !== 0 ? this.offset + 1 : '0'))\n          .replace('{to}', '' + (Math.min(this.offset + this.limit, this.itemCount)))\n          .replace('{total}', '' + this.itemCount);\n      } else {\n        this.paginationNotification = '';\n      }\n      if (this.columns !== undefined && this.sortBy !== undefined) {\n        const col = this.columns.toArray().find(column => column.property === this.sortBy) as DataTableColumnDirective;\n        this.sortNotification = (this.sortAsc ? this.labels.sortedAscending : this.labels.sortedDescending)\n          .replace('{title}', this.title)\n          .replace('{header}', col.header);\n      } else {\n        this.sortNotification = '';\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subject$.unsubscribe();\n    this.notifier$.unsubscribe();\n  }\n}\n",
    "export type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\n/*tslint:disable-next-line*/\nexport function drag(event: MouseEvent, {move: move, up: up}: { move: MoveHandler, up?: UpHandler }) {\n\n  const startX = event.pageX;\n  const startY = event.pageY;\n  let x = startX;\n  let y = startY;\n  let moved = false;\n\n  function mouseMoveHandler(evt: MouseEvent) {\n    const dx = evt.pageX - x;\n    const dy = evt.pageY - y;\n    x = evt.pageX;\n    y = evt.pageY;\n    if (dx || dy) {\n      moved = true;\n    }\n\n    move(evt, dx, dy, x, y);\n\n    event.preventDefault(); // to avoid text selection\n  }\n\n  function mouseUpHandler(evt: MouseEvent) {\n    x = evt.pageX;\n    y = evt.pageY;\n\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    if (up) {\n      up(event, x, y, moved);\n    }\n  }\n\n  document.addEventListener('mousemove', mouseMoveHandler);\n  document.addEventListener('mouseup', mouseUpHandler);\n}\n",
    "import { DataTableTranslations } from './data-table-translations.type';\n\nexport const defaultTranslations: DataTableTranslations = {\n  headerReload: 'reload {title} table',\n  headerColumnSelector: 'column selector - adds or removes columns from {title} table',\n  headerColumnSelectorAdded: '{column_name} added to {title} table',\n  headerColumnSelectorRemoved: '{column_name} removed from {title} table',\n  indexColumn: 'index',\n  selectColumn: 'select',\n  selectRow: 'select {cell_content}',\n  selectAllRows: 'select all rows',\n  expandColumn: 'expand',\n  expandRow: 'expand {cell_content}',\n  sortedAscending: '{title} table sorted by {header} ascending',\n  sortedDescending: '{title} table sorted by {header} descending',\n  sortAscending: 'activate to sort ascending',\n  sortDescending: 'activate to sort descending',\n  paginationLimit: 'Limit',\n  paginationText: 'Results: {from} to {to} of {total}',\n  paginationTotalPages: 'of',\n  firstPage: 'first page',\n  prevPage: 'previous page',\n  pageNumberLabel: 'Page',\n  pageNumber: 'page number',\n  pageNumberNofM: '({N} of {M})',\n  nextPage: 'next page',\n  lastPage: 'last page',\n  loadingText: '{title} table is loading',\n  loadedText: '{title} table loaded'\n};\n",
    "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: '[dataTableRow]',\n  template: `<tr (click)=\"expanded = !expanded;\" class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\">\n\t<td [hide]=\"!dataTable.expandColumnVisible\">\n\t\t<span class=\"row-expand-button\"\n\t\t      [attr.aria-expanded]=\"expanded\"\n\t\t      [title]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n\t\t      [attr.aria-label]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\">\n\t\t\t<i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\n\t\t</span>\n\t</td>\n\t<td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n\t<td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n\t\t<input type=\"checkbox\" [(ngModel)]=\"selected\"\n\t\t       [title]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n\t\t       [attr.aria-label]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"/>\n\t</td>\n\t<ng-template ngFor [ngForOf]=\"dataTable.columns\" let-column>\n\t\t<th *ngIf=\"dataTable.primaryColumn === column.property\" scope=\"row\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n\t\t    class=\"data-column\"\n\t\t    [style.background-color]=\"column.getCellColor(_this, index)\">\n\t\t\t<div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n\t\t\t<div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n\t\t\t     [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n\t\t</th>\n\t\t<td *ngIf=\"dataTable.primaryColumn !== column.property\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n\t\t    class=\"data-column\"\n\t\t    [style.background-color]=\"column.getCellColor(_this, index)\">\n\t\t\t<div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n\t\t\t<div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n\t\t\t     [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n\t\t</td>\n\t</ng-template>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n\t<td [attr.colspan]=\"dataTable.columnCount\">\n\t\t<div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\n\t</td>\n</tr>\n`,\n  styles: [`.select-column{text-align:center}.row-expand-button{-webkit-box-sizing:content-box;box-sizing:content-box;background:0 0;border:0;color:inherit;cursor:pointer;font:inherit;line-height:normal;overflow:visible;padding:.15rem .75rem;-webkit-appearance:button;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none}.clickable{cursor:pointer}th{font-weight:initial}`]\n})\nexport class DataTableRowComponent implements OnInit, OnDestroy {\n\n  public _this = this;\n\n  @Input() item: any;\n  @Input() index: number;\n\n  expanded: boolean;\n\n  private _listeners = [];\n\n  // row selection:\n  private _selected: boolean;\n\n  @Output() selectedChange = new EventEmitter();\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(selected) {\n    this._selected = selected;\n    this.selectedChange.emit(selected);\n  }\n\n  // other:\n  get displayIndex() {\n    if (this.dataTable.pagination) {\n      return this.dataTable.displayParams.offset + this.index + 1;\n    } else {\n      return this.index + 1;\n    }\n  }\n\n  getTooltip() {\n    if (this.dataTable.rowTooltip) {\n      return this.dataTable.rowTooltip(this.item, this, this.index);\n    }\n    return '';\n  }\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.dataTable.rowClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'click',\n          (event) => this.dataTable.rowClicked(this, event))\n      );\n    }\n    if (this.dataTable.rowDoubleClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'dblclick',\n          (event) => this.dataTable.rowDoubleClicked(this, event))\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.selected = false;\n    this._listeners.forEach(fn => fn());\n  }\n}\n",
    "import {ContentChild, Directive, ElementRef, Input, OnInit} from '@angular/core';\nimport {DataTableRowComponent} from '../../components/row/row.component';\nimport {CellCallback} from '../../types/cell-callback.type';\n\n\n@Directive({\n  selector: 'data-table-column'\n})\nexport class DataTableColumnDirective implements OnInit {\n\n  private styleClassObject = {}; // for [ngClass]\n\n  // init:\n  @Input() header: string;\n  @Input() sortable = false;\n  @Input() resizable = false;\n  @Input() property: string;\n  @Input() styleClass: string;\n  @Input() cellColors: CellCallback;\n\n  // init and state:\n  @Input() width: number | string;\n  @Input() visible = true;\n\n  @ContentChild('dataTableCell') cellTemplate: ElementRef;\n  @ContentChild('dataTableHeader') headerTemplate: ElementRef;\n\n  getCellColor(row: DataTableRowComponent, index: number) {\n    if (this.cellColors !== undefined) {\n      return (<CellCallback>this.cellColors)(row.item, row, this, index);\n    }\n  }\n\n  ngOnInit() {\n    this._initCellClass();\n  }\n\n  private _initCellClass() {\n    if (!this.styleClass && this.property) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n        this.styleClass = 'column-' + this.property;\n      } else {\n        this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    if (this.styleClass != null) {\n      this.styleClassObject = {\n        [this.styleClass]: true\n      };\n    }\n  }\n}\n",
    "import {DataTableParams} from '../types/data-table-params.type';\n\n\nexport class DataTableResource<T> {\n\n  constructor(private items: T[]) {\n  }\n\n  query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\n\n    let result: T[] = [];\n    if (filter) {\n      result = this.items.filter(filter);\n    } else {\n      result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n    }\n\n    if (params.sortBy) {\n      result.sort((a: DataTableParams, b: DataTableParams) => {\n        if (typeof a[params.sortBy] === 'string') {\n          return a[params.sortBy].localeCompare(b[params.sortBy]);\n        } else {\n          return a[params.sortBy] - b[params.sortBy];\n        }\n      });\n      if (params.sortAsc === false) {\n        result.reverse();\n      }\n    }\n    if (params.offset !== undefined) {\n      if (params.limit === undefined) {\n        result = result.slice(params.offset, result.length);\n      } else {\n        result = result.slice(params.offset, params.offset + params.limit);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result));\n    });\n  }\n\n  count(): Promise<number> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.items.length));\n    });\n\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'px'\n})\nexport class PixelConverter implements PipeTransform {\n  transform(value: string | number, args: string[]): any {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return value + 'px';\n    }\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n  transform(value: number[], args: string[]): any {\n    return Math.min.apply(null, value);\n  }\n}\n",
    "import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2\n} from '@angular/core';\n\nfunction isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\n@Directive({\n  selector: '[hide]'\n})\nexport class HideDirective {\n\n  private _prevCondition = false;\n  private _displayStyle: string;\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  @Input()\n  set hide(newCondition: boolean) {\n    this.initDisplayStyle();\n\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n    }\n  }\n\n  private initDisplayStyle() {\n    if (this._displayStyle === undefined) {\n      const displayStyle = this._elementRef.nativeElement.style.display;\n      if (displayStyle !== 'none') {\n        this._displayStyle = displayStyle;\n      }\n    }\n  }\n}\n"
  ],
  "names": [
    "FormsModule",
    "CommonModule",
    "NgModule",
    "Input",
    "ViewChild",
    "Inject",
    "forwardRef",
    "Component",
    "nextId",
    "HostListener",
    "ElementRef",
    "Output",
    "ContentChild",
    "ViewChildren",
    "ContentChildren",
    "Subject",
    "EventEmitter",
    "Renderer2",
    "Directive",
    "Pipe"
  ],
  "mappings": "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"
}
